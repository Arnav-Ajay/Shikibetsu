# -*- coding: utf-8 -*-
"""market_1501.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11BVwdaMO9b1YMWBV6b9LMcRzsLW6P7OI
"""

import os
import torch
import pandas as pd
import torchvision.transforms as transforms
from torch.utils.data import Dataset, DataLoader
from torchvision.io import read_image

"""12936 rows Ã— 2 columns"""

class MARKET1501(Dataset):

  def __init__(self, annotations_file, img_dir, transform=None, target_transform=None):
    self.img_dir = img_dir

    if not os.path.exists(annotations_file):
      print('File does not exist....\nCreating')
      self.create_csv(annotations_file)      
    
    self.img_labels = pd.read_csv(annotations_file)
    self.transform = transform
    self.target_transform = target_transform

  def __len__(self):
    return len(self.img_labels)

  def __getitem__(self, idx):
    img_path = os.path.join(self.img_dir, self.img_labels.iloc[idx, 0])
    image = read_image(img_path)
    label = self.img_labels.iloc[idx, 1]
    if self.transform:
      image = self.transform(image)
    if self.target_transform:
      label = self.target_transform(label)
    return image, label

  def create_csv(self, annotations_file):

    dataset_labels = []
    dataset_images = []
    dataset_train = pd.DataFrame()

    for root, dirs, files in os.walk(self.img_dir, topdown=True):
      dataset_labels = dirs
      for label in dataset_labels:
        IMG_PATH = os.path.join(self.img_dir, label)
        for root, dirs, files in os.walk(IMG_PATH, topdown=True):
          for img_name in files:
            dataset_images.append(img_name)

    dataset_train['img_path'] = [os.path.join(img.split('_')[0], img) for img in dataset_images]
    dataset_train['target'] = [img.split('_')[0] for img in dataset_images]

    dataset_train.to_csv(annotations_file, index=False)